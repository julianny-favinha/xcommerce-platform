buildscript {
	ext {
		kotlinVersion = '1.2.20'
		springBootVersion = '2.0.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
	}
}

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "gradle.plugin.com.boxfuse.client:gradle-plugin-publishing:5.0.7"
    }
}


apply plugin: "org.flywaydb.flyway"
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


group = 'com.mc851'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('com.fasterxml.jackson.module:jackson-module-kotlin')
	compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	compile("org.jetbrains.kotlin:kotlin-reflect")
	compile('org.flywaydb:flyway-core')
	compile('org.springframework:spring-jdbc')
    compile('com.zaxxer:HikariCP')
	runtime('org.postgresql:postgresql')
	compile 'commons-validator:commons-validator:1.4.1'
	testCompile('org.springframework.boot:spring-boot-starter-test')
	implementation 'com.squareup.okhttp3:okhttp:3.10.0'
}

flyway {
    url = "$System.env.SPRING_DATASOURCE_URL"
    user = "$System.env.SPRING_DATASOURCE_USERNAME"
    password = "$System.env.SPRING_DATASOURCE_PASSWORD"
}